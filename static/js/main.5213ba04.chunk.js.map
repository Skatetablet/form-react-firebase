{"version":3,"sources":["firebase.js","components/LinkForm.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinkForm","props","initialValues","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","currentId","className","onSubmit","preventDefault","str","test","toast","type","autoClose","console","log","addOrEdit","placeholder","onChange","rows","Links","links","setLinks","setCurrentId","linkObject","set","update","error","onDelete","window","confirm","delete","getLinks","onSnapshot","querySnapshot","docs","forEach","push","map","link","onClick","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5213ba04.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDHaqcECpf8ipDO5tkDj4ORK42oTbfFKgM\",\r\n    authDomain: \"fb-crud-ab6fa.firebaseapp.com\",\r\n    projectId: \"fb-crud-ab6fa\",\r\n    storageBucket: \"fb-crud-ab6fa.appspot.com\",\r\n    messagingSenderId: \"153560596845\",\r\n    appId: \"1:153560596845:web:7879db4cdf1c0c7975da64\"\r\n  };\r\n  // Initialize Firebase\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = fb.firestore();\r\n\r\nexport default db;","import React, {useEffect, useState} from 'react'\r\nimport \"./LinkForm.css\"\r\nimport db from '../firebase'\r\nimport {toast} from \"react-toastify\"\r\n\r\n\r\nconst LinkForm = (props) => {\r\n\r\n    const initialValues = {\r\n        url: \"\",\r\n        name: \"\",\r\n        description: \"\"\r\n    };\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({...values, [name]: value})\r\n        \r\n    }\r\n\r\n    const validateURL = str => {\r\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(str);\r\n\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(!validateURL(values.url)) {\r\n            return toast(\"Invalid URL\", {\r\n                type: \"warning\",\r\n                autoClose: 2000,\r\n                })\r\n        }\r\n        console.log(values);\r\n        props.addOrEdit(values);\r\n        setValues({...initialValues})\r\n    }\r\n\r\n    const getLinkById =  async (id) => {\r\n        const doc = await db.collection(\"links\").doc(id).get();\r\n        setValues({...doc.data()})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.currentId === \"\") {\r\n            setValues({...initialValues});\r\n        } else {\r\n            getLinkById(props.currentId)\r\n        }\r\n    },[props.currentId])\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"https://someurl.com\" name=\"url\" onChange={handleInputChange}  value={values.url}/>\r\n            </div>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Website name\" onChange={handleInputChange} value={values.name}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea name=\"description\" rows=\"3\" className=\"form-control\" placeholder=\"Write a description\" onChange={handleInputChange} value={values.description}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary btn-block\">{props.currentId === \"\" ? \"Save\": \"Update\" }</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LinkForm;","import React, {useEffect, useState} from 'react'\r\nimport db from '../firebase'\r\nimport LinkForm from './LinkForm'\r\nimport {toast} from \"react-toastify\"\r\n\r\nconst Links = () => {\r\n\r\n    const [links, setLinks] = useState([]);\r\n    const [currentId, setCurrentId] = useState(\"\");\r\n\r\n    const addOrEdit = async (linkObject) => {\r\n        try {\r\n            if (currentId === \"\" ) {\r\n                await db.collection(\"links\").doc().set(linkObject)\r\n                toast(\"Link Added\", {\r\n                type: \"success\",\r\n                autoClose: 2000,\r\n                })\r\n            } else {\r\n               await db.collection(\"links\").doc(currentId).update(linkObject)\r\n               toast(\"Link Updated\", {\r\n                type: \"info\",\r\n                autoClose: 2000,\r\n                })\r\n                setCurrentId(\"\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        \r\n    }\r\n\r\n    const onDelete = async (id) => {\r\n        if(window.confirm(\"Are you sure you want to delete this link?\")) {\r\n            await db.collection(\"links\").doc(id).delete();\r\n            toast(\"Link Deleted\", {\r\n                type: \"error\",\r\n                autoClose: 2000,\r\n            })\r\n        }\r\n    }\r\n\r\n    const getLinks = async () => {\r\n        db.collection(\"links\").onSnapshot((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach(doc => {\r\n                docs.push({...doc.data(), id:doc.id})\r\n            })\r\n            setLinks(docs);\r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getLinks();\r\n    }, [])\r\n\r\n\r\n    return (\r\n    \r\n        <div>\r\n            <div className=\"col-md-6 p-2\">\r\n                <LinkForm {...{addOrEdit, currentId, links}}/>\r\n            </div>\r\n            <div className=\"col-md-6 p-2\">\r\n                {links.map(link => (\r\n                    <div className=\"card mb-1\" key={link.id}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <h4>{link.name}</h4>\r\n                                <div>\r\n                                    <i className=\"material-icons text-danger\" onClick={() => onDelete(link.id)}>close</i>\r\n                                    <i className=\"material-icons\" onClick={() => setCurrentId(link.id)}>create</i>\r\n                                </div>\r\n                            </div>\r\n                            <p>{link.description}</p>\r\n                            <a href={link.url} target=\"_blank\">Go to Website</a>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\nimport './App.css';\nimport Links from './components/Links'\nimport LinkForm from './components/LinkForm'\nimport {ToastContainer} from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\n\nfunction App() {\n  return (\n    <div className=\"container p-4\">\n      <div className=\"row\">\n        <Links />\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./firebase\"\nimport \"bootswatch/dist/sandstone/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}